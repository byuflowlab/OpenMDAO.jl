name: Tests

on:
  pull_request:
    branches:
      - pythoncall_juliacall
  push:
    branches:
      - pythoncall_juliacall
    tags: '*'

jobs:
  julia:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version:
          - '1' # Leave this line unchanged. '1' will automatically expand to the latest stable 1.x release of Julia.
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/add-julia-registry@v1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          registry: dingraha/DanielIngrahamRegistry
        env:
              JULIA_PKG_USE_CLI_GIT: 'true'
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - name: OpenMDAOCore.jl Tests
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.activate("./julia/OpenMDAOCore.jl")
          Pkg.update()
          Pkg.test()
        env:
              JULIA_PKG_USE_CLI_GIT: 'true'
      - name: OpenMDAO.jl Tests
        shell: julia --color=yes {0}
        run: |
          using Pkg
          Pkg.activate("./julia/OpenMDAO.jl")
          Pkg.update()
          Pkg.test()
        env:
              JULIA_PKG_USE_CLI_GIT: 'true'

  python:
    name: Python ${{ matrix.python-version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1' # Leave this line unchanged. '1' will automatically expand to the latest stable 1.x release of Julia.
        os:
          - ubuntu-latest
        arch:
          - x64
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/add-julia-registry@v1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          registry: dingraha/DanielIngrahamRegistry
        env:
              JULIA_PKG_USE_CLI_GIT: 'true'
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: omjlcomps install
        run: |
          pip install testflo
          pip install -e ./python
          python -c "import juliapkg; juliapkg.resolve()"
        env:
              JULIA_PKG_USE_CLI_GIT: 'true'
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15
        with:
          limit-access-to-actor: true
        env:
              JULIA_PKG_USE_CLI_GIT: 'true'
